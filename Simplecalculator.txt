activity_main.xml

  
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="16dp"
    android:id="@+id/main">
    <TextView
        android:id="@+id/input"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="32sp"
        android:padding="16dp"
        android:background="#E0E0E0"
        android:layout_alignParentTop="true"
        android:gravity="end"/>
    <TextView
        android:id="@+id/output"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="24sp"
        android:layout_below="@id/input"
        android:gravity="end"/>
    <GridLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@id/output"
        android:layout_marginTop="16dp"
        android:rowCount="5"
        android:columnCount="4">
        <Button android:id="@+id/btn1" android:text="1"
            tools:ignore="HardcodedText" />
        <Button android:id="@+id/btn2" android:text="2"
            tools:ignore="HardcodedText"/>
        <Button android:id="@+id/btn3" android:text="3"
            tools:ignore="HardcodedText"/>
        <Button android:id="@+id/add" android:text="+"
            tools:ignore="HardcodedText"/>
        <Button android:id="@+id/btn4" android:text="4"
            tools:ignore="HardcodedText"/>
        <Button android:id="@+id/btn5" android:text="5"
            tools:ignore="HardcodedText"/>
        <Button android:id="@+id/btn6" android:text="6"
            tools:ignore="HardcodedText"/>
        <Button android:id="@+id/subtract" android:text="-"
            tools:ignore="HardcodedText"/>
        <Button android:id="@+id/btn7" android:text="7"
            tools:ignore="HardcodedText"/>
        <Button android:id="@+id/btn8" android:text="8"
            tools:ignore="HardcodedText"/>
        <Button android:id="@+id/btn9" android:text="9"
            tools:ignore="HardcodedText"/>
        <Button android:id="@+id/multiply" android:text="*"
            tools:ignore="HardcodedText"/>
        <Button android:id="@+id/btnClear" android:text="C"
            tools:ignore="HardcodedText"/>
        <Button android:id="@+id/btn0" android:text="0"
            tools:ignore="HardcodedText"/>
        <Button android:id="@+id/equal" android:text="="
            tools:ignore="HardcodedText"/>
        <Button android:id="@+id/divide" android:text="/"
            tools:ignore="HardcodedText"/>
    </GridLayout>
</RelativeLayout>


MainActivity.kt

package com.example.simplecalculator

import android.os.Bundle
import android.view.View
import android.widget.Button
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity
class MainActivity : AppCompatActivity() {
    private lateinit var inputDisplay: TextView
    private lateinit var outputDisplay: TextView
    private var firstValue: Double = 0.0
    private var secondValue: Double = 0.0
    private var currentOperation: String? = null
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        inputDisplay = findViewById(R.id.input)
        outputDisplay = findViewById(R.id.output)
        val buttons = listOf<Button>(
            findViewById(R.id.btn0),
            findViewById(R.id.btn1),
            findViewById(R.id.btn2),
            findViewById(R.id.btn3),
            findViewById(R.id.btn4),
            findViewById(R.id.btn5),
            findViewById(R.id.btn6),
            findViewById(R.id.btn7),
            findViewById(R.id.btn8),
            findViewById(R.id.btn9),
            findViewById(R.id.add),
            findViewById(R.id.subtract),
            findViewById(R.id.multiply),
            findViewById(R.id.divide),
            findViewById(R.id.equal),
            findViewById(R.id.btnClear)
        )
        for (button in buttons) {
            button.setOnClickListener { onButtonClick(button) }
        }
    }
    private fun onButtonClick(button: Button) {
        when (button.id) {
            R.id.btnClear-> clear()
            R.id.equal-> calculateResult()
            in listOf(R.id.add, R.id.subtract, R.id.multiply, R.id.divide)->
                setOperation(button.text.toString())
            else-> appendToInput(button.text.toString())
        }
    }
    private fun clear() {
        inputDisplay.text = ""
        outputDisplay.text = ""
        firstValue = 0.0
        secondValue = 0.0
        currentOperation = null
    }
    private fun appendToInput(value: String) {
        inputDisplay.append(value)
    }
    private fun setOperation(operation: String) {
        if (inputDisplay.text.isNotEmpty()) {
            firstValue = inputDisplay.text.toString().toDouble()
            currentOperation = operation
            inputDisplay.text = ""
        }
    }
    private fun calculateResult() {
        if (inputDisplay.text.isNotEmpty() && currentOperation != null) {
            secondValue = inputDisplay.text.toString().toDouble()
            val result = when (currentOperation) {
                "+"-> firstValue + secondValue
                "-"-> firstValue- secondValue
                "*"-> firstValue * secondValue
                "/"-> if (secondValue != 0.0) firstValue / secondValue else Double.NaN
                else-> 0.0
            }
            outputDisplay.text = result.toString()
            currentOperation = null
        }
    }
}  
